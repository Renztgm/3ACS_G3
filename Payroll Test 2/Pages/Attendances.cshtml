@page
@model Payroll_Test_2.Pages.AttendancesModel
@{
    ViewData["Title"] = "Attendance Records";
}

<style>
    .table-responsive {
        width: 100%; /* Full width */
        max-height: 400px; /* Prevents table from becoming too tall */
        overflow-y: auto; /* Enables vertical scrolling */
    }

    .table {
        width: 100%; /* Ensures table spans full width */
    }

    /* Set table row height */
    .table tbody tr {
        height: 50px;
    }

    /* Adjust cell padding */
    .table td, .table th {
        padding: 10px;
    }


    #attendanceChart {
        width: 100%; /* Full width */
        max-height: 100px; /* Prevents the chart from becoming too tall */
    }
</style>


<h2>Employee Attendance for @Model.SelectedDate.ToString("MMMM dd, yyyy")</h2>

<!-- Date Selection -->
<a asp-page="Attendances" asp-route-id="@Model.EmployeeId" asp-route-date="@Model.PreviousDate.ToString("yyyy-MM-dd")" class="btn btn-secondary">Previous Day</a>
<a asp-page="Attendances" asp-route-id="@Model.EmployeeId" asp-route-date="@Model.NextDate.ToString("yyyy-MM-dd")" class="btn btn-secondary">Next Day</a> 


<!-- Manual Date Picker -->
<input type="date" id="datePicker" value="@Model.SelectedDate.ToString("yyyy-MM-dd")" class="form-control mt-3">
<button id="goToDate" class="btn btn-primary mt-2">Go</button>

<!-- Chart Container -->
<div class="chart-container" style="position: relative; height: 400px;">
    <canvas id="attendanceChart"></canvas>
</div>
<table class="table">
    <thead>
        <tr>
            <th>Employee</th>
            <th>Check-In</th>
            <th>Lunch Start</th> <!-- ✅ Added -->
            <th>Lunch End</th> <!-- ✅ Added -->
            <th>Check-Out</th>
            <th>Work Hours</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var record in Model.AttendanceRecords)
        {
            <tr>
                <td>@record.Employee.FirstName @record.Employee.LastName</td>
                <td>@record.CheckInTime?.ToString("hh:mm tt")</td>
                <td>@record.LunchStartTime?.ToString("hh:mm tt")</td> <!-- ✅ Added -->
                <td>@record.LunchEndTime?.ToString("hh:mm tt")</td> <!-- ✅ Added -->
                <td>@record.CheckOutTime?.ToString("hh:mm tt")</td>
                <td>@record.WorkHours</td>
            </tr>
        }
    </tbody>
</table>

<!-- Chart.js Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
        document.addEventListener("DOMContentLoaded", function () {
        var ctx = document.getElementById("attendanceChart").getContext("2d");

        // Get attendance data from Razor Page
        var attendanceData = @Html.Raw(Model.ChartDataJson);

        var labels = attendanceData.map(record => record.Employee);
        var checkInTimes = attendanceData.map(record => record.CheckInTime);
        var lunchStartTimes = attendanceData.map(record => record.LunchStartTime);
        var lunchEndTimes = attendanceData.map(record => record.LunchEndTime);
        var checkOutTimes = attendanceData.map(record => record.CheckOutTime);
        var workDurations = attendanceData.map(record => record.WorkHours);

        new Chart(ctx, {
            type: "bar",
            data: {
                labels: labels,
                datasets: [
                    {
                        label: "Offset",
                        data: checkInTimes,
                        backgroundColor: "rgba(0,0,0,0)",
                        borderWidth: 0
                    },
                    {
                        label: "Work Hours",
                        data: workDurations,
                        backgroundColor: "rgba(75, 192, 192, 0.7)",
                        borderColor: "rgba(75, 192, 192, 1)",
                        borderWidth: 1
                    },
                    {
                        label: "Lunch Break",
                        data: lunchStartTimes.map((start, index) => lunchEndTimes[index] - start),
                        backgroundColor: "rgba(255, 99, 132, 0.7)",
                        borderColor: "rgba(255, 99, 132, 1)",
                        borderWidth: 1
                    }
                ]
            },
            options: {
                indexAxis: "y",
                scales: {
                    x: {
                        stacked: true,
                        min: 0,
                        max: 24,
                        ticks: {
                            stepSize: 1,
                            callback: function(value) { return value + ":00"; }
                        }
                    },
                    y: {
                        stacked: true,
                        title: { display: false, text: "Employee" }
                    }
                },
                plugins: {
                    legend: { display: true },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                if (tooltipItem.datasetIndex === 0) {
                                    return "";
                                }
                                return tooltipItem.raw + " hours";
                            }
                        }
                    }
                },
                responsive: true,
                maintainAspectRatio: false
            }
        });

        // Date Picker Navigation
        document.getElementById("goToDate").addEventListener("click", function () {
            var datePicker = document.getElementById("datePicker");
            if (!datePicker) return; // Ensure date picker exists

            var selectedDate = datePicker.value;
            var employeeId = "@Model.EmployeeId"; // Employee ID from Razor

            if (selectedDate) {
                var formattedDate = new Date(selectedDate).toISOString().split("T")[0]; // Ensure correct format
                window.location.href = `/Attendances?id=${employeeId}&date=${formattedDate}`;
            }
        });
    });
</script>
